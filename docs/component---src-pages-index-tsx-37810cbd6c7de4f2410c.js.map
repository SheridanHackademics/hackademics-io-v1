{"version":3,"sources":["webpack:///./src/components/hero/Hero.tsx","webpack:///./src/components/ContactHero.tsx","webpack:///./src/pages/index.tsx"],"names":["HeroHolder","styled","div","props","theme","breakpoints","mobile","HeroSubtitle","span","HeroButton","button","palette","common","white","HackvilleWrap","Hero","data","useStaticQuery","as","Link","to","fluid","file","childImageSharp","alt","target","href","style","textDecoration","Holder","Title","h1","uncommon","lightBlack","Button","primary","green","ContactHero","title","LandingItemContent","direction","tablet","ItemText","SmallHeader","h2","black","SmallContent","p","LandingButton","ImgWrap","LandingItem","details","index","description","backgroundColor","color","illustration","query","IndexPage","image","bg","Navbar","useDark","menuLinks","site","siteMetadata","allContentfulLandingPageItem","edges","map","item","i","key","node","buttonText","buttonUrl","buttonColor","hexColor","Footer"],"mappings":"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","file":"component---src-pages-index-tsx-37810cbd6c7de4f2410c.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nconst HeroHolder = styled.div`\n  color: #f7f7ff;\n  margin-top: 15vh;\n  margin-bottom: 29vh;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    margin: 0vh;\n    padding: 10vh 0vh;\n    height: 100%;\n    box-sizing: border-box;\n  }\n`\n\nconst HeroSubtitle = styled.span`\n  flex-basis: 100%;\n  margin-top: 55px;\n  font-weight: 700;\n  font-size: 2.813em;\n  letter-spacing: 4.5px;\n  display: block;\n  text-align: center;\n  text-transform: uppercase;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    font-size: 2em;\n  }\n`\n\nconst HeroButton = styled.button`\n  display: block;\n  margin-top: 45px;\n  padding-left: 70px;\n  padding-right: 70px;\n  padding-top: 25px;\n  padding-bottom: 25px;\n  color: ${props => props.theme.palette.common.white};\n  background-color: #2662dd;\n  font-size: 1.75rem;\n  font-weight: 700;\n  letter-spacing: 3.3px;\n  border: none;\n  transition: all 0.3s ease 0s;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n\n  :hover {\n    background-color: ${props => props.theme.palette.common.white};\n    color: #2662dd;\n  }\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    margin: 5vw;\n  }\n`\n\nconst HackvilleWrap = styled.div`\n  margin: auto 0;\n  flex: 0 1 36px;\n  min-width: 45.36vw;\n  margin-top: -4px;\n\n  @media (max-width: 1256px) and (orientation: landscape) {\n    flex: 0 1 25px;\n  }\n\n  @media (max-width: 1256px) {\n    margin-top: 5.5px;\n    min-width: 70vw;\n  }\n`\n\nconst Hero = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      file(name: { eq: \"hackville\" }, extension: { eq: \"png\" }) {\n        childImageSharp {\n          fluid(pngQuality: 100) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <HeroHolder>\n      <HackvilleWrap as={Link} to=\"/\">\n        <Img fluid={data.file.childImageSharp.fluid} alt=\"logo\" />\n      </HackvilleWrap>\n      <HeroSubtitle>Hackville Registrations are open!</HeroSubtitle>\n      <a target=\"_blank\" href=\"https://hackville.io/\" style={{ textDecoration: \"none\" }}>\n        <HeroButton>Register Now</HeroButton>\n      </a>\n    </HeroHolder>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Holder = styled.div`\n  text-align: center;\n  padding: 40vh 20vw;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    padding: 20vh 2rem;\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: 800;\n  color: ${props => props.theme.palette.uncommon.lightBlack};\n  margin-bottom: 55px;\n\n    @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    font-size: 2.5rem;\n  }\n`\n\nconst Button = styled.button`\n  padding: 20px 60px;\n  color: ${props => props.theme.palette.common.white};\n  background-color: ${props => props.theme.palette.primary.green};\n  font-size: 1.5em;\n  font-weight: 500;\n  letter-spacing: 2.6px;\n  border: none;\n  transition: all 0.3s ease 0s;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    width: 100%;\n  }\n`\n\nconst ContactHero = ({ title }) => (\n  <Holder>\n    <Title>{title}</Title>\n    <a href=\"/contact\" style={{ textDecoration: \"none\" }}>\n      <Button>Contact Us</Button>\n    </a>\n  </Holder>\n)\n\nexport default ContactHero\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport SEO from \"../components/seo\"\nimport Footer from \"../components/footer/Footer\"\nimport Hero from \"../components/hero/Hero\"\nimport Img from \"gatsby-image\"\nimport { ImageLayout, LandingLayout } from \"../components/layouts\"\nimport Navbar from \"../components/navbar/Navbar\"\nimport ContactHero from \"../components/ContactHero\"\nimport styled from \"styled-components\"\nimport { Edges, IChildImageSharp, IMenuLink, Node } from \"../types\"\n\ninterface IProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        menuLinks: IMenuLink[]\n      }\n    }\n    bg: IChildImageSharp\n    allContentfulLandingPageItem: Edges<Node<ILandingPage>>\n  }\n}\n\ninterface ILandingPage {\n  id: string\n  title: string\n  description: {\n    description: string\n  }\n  buttonText: string\n  buttonColor: {\n    hexColor: string\n  }\n  buttonUrl: string\n  illustration: {\n    fluid: any\n  }\n}\n\nconst LandingItemContent = styled.div<{ direction: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  text-align: ${props => (props.direction ? \"left\" : \"right\")};\n  flex-direction: ${props => (props.direction ? \"row\" : \"row-reverse\")};\n  padding-left: ${props => (props.direction ? \"15.73vw\" : \"0\")};\n  padding-right: ${props => (props.direction ? \"0\" : \"15.73vw\")};\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    flex-flow: row wrap;\n    padding: 5vw;\n  }\n\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\n    height: 700px;\n  }\n`\n\nconst ItemText = styled.div`\n  padding-top: 15%;\n`\n\nconst SmallHeader = styled.h2`\n  font-size: 24px;\n  letter-spacing: 0px;\n  color: ${props => props.theme.palette.common.black};\n  font-weight: 800;\n  margin-bottom: 16px;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    text-align: center;\n  }\n`\n\nconst SmallContent = styled.p`\n  font-size: 24px;\n  letter-spacing: 0px;\n  color: ${props => props.theme.palette.common.black};\n  max-width: 540px;\n  margin-bottom: 16px;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    text-align: left;\n  }\n`\n\nconst LandingButton = styled.button`\n  padding: 20px 60px;\n  color: ${props => props.theme.palette.common.white};;\n  font-size: 1.5em;\n  font-weight: 500;\n  letter-spacing: 2.6px;\n  border: none;\n  transition: all 0.3s ease 0s;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    width: 100%;\n  }\n`\n\nconst ImgWrap = styled.div`\n  width: 730px;\n  height: 1080px;\n\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\n    display: none;\n  }\n`\n\ninterface LandingItemProps {\n  index: number\n  title: string\n  description: string\n  href: string\n  button: string\n  color: string\n  illustration: {\n    fluid: any\n  }\n}\n\nconst LandingItem = (details: LandingItemProps) => (\n  <LandingItemContent direction={details.index % 2 == 0}>\n    <ItemText>\n      <SmallHeader>{details.title}</SmallHeader>\n      <SmallContent>{details.description}</SmallContent>\n      <a href={details.href} style={{ textDecoration: \"none\" }}>\n        <LandingButton style={{ backgroundColor: details.color }}>\n          {details.button}\n        </LandingButton>\n      </a>\n    </ItemText>\n    <ImgWrap>\n      <Img fluid={details.illustration.fluid}></Img>\n    </ImgWrap>\n  </LandingItemContent>\n)\n\nconst IndexPage = ({ data }: IProps) => {\n  return (\n    <>\n      <ImageLayout image={data.bg.childImageSharp.fluid}>\n        <SEO title=\"Home\" />\n        <Navbar useDark={false} menuLinks={data.site.siteMetadata.menuLinks} />\n        <Hero />\n      </ImageLayout>\n      <LandingLayout>\n        {data.allContentfulLandingPageItem.edges.map((item, i) => (\n          <LandingItem\n            key={item.node.title}\n            index={i}\n            title={item.node.title}\n            description={item.node.description.description}\n            button={item.node.buttonText}\n            href={item.node.buttonUrl}\n            color={item.node.buttonColor.hexColor}\n            illustration={item.node.illustration}\n          />\n        ))}\n        <ContactHero title=\"Have more questions? Reach out to us!\" />\n        <Footer menuLinks={data.site.siteMetadata.menuLinks} />\n      </LandingLayout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        menuLinks {\n          name\n          slug\n          footer\n        }\n      }\n    }\n    bg: file(name: { eq: \"hackville-bg\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid(quality: 100) {\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n    }\n    allContentfulLandingPageItem(sort: { order: ASC, fields: createdAt }) {\n      edges {\n        node {\n          id\n          title\n          description {\n            description\n          }\n          buttonText\n          buttonColor {\n            hexColor\n          }\n          buttonUrl\n          illustration {\n            fluid(quality: 100) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}